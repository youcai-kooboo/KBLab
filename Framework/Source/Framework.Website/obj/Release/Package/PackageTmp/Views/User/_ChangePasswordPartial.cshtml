@model MD.Web.Models.LocalPasswordModel

<div class="row-fluid">
<div class="box span12">
    <div class="box-header well" data-original-title>
        <h2><i class="icon-edit"></i>Change Password</h2>
    </div> 
    <div class="box-content">
        @using (Html.BeginForm("Manage", "User"))
        {
            @Html.AntiForgeryToken()
   
            <div class="alert alert-error">
                @Html.ValidationSummary(true)

            </div>
            <fieldset>

                <div class="control-group">
                    <label class="control-label">Old Password</label>
                    <div class="controls">
                        @Html.PasswordFor(model => model.OldPassword, new { @class = "input-xlarge focused" })
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.OldPassword)</span>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">New Password</label>
                    <div class="controls">
                        @Html.PasswordFor(model => model.NewPassword, new { @class = "input-xlarge focused" })
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.NewPassword)</span>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Confirm Password</label>
                    <div class="controls">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "input-xlarge focused" })
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.ConfirmPassword)</span>
                    </div>
                </div>


                <div class="form-actions">                
                    <button type="submit" class="btn btn-primary">Save</button>
                     <button class="btn" type="reset">Cancel</button>

                </div>
            </fieldset>
    
   
        }
    </div>
</div>
    </div>
@Scripts.Render("~/bundles/jqueryval")